#设置监听的IP与端口号
http_port 3128
# auth_param 设置代理的认证方式
# 用法：auth_param scheme parameter [setting]
# scheme表示认证机制，squid支持Basic，Digest，NTLM，Negotiate四种认证机制
# program设置认证程序为ncsa_auth（squid自带不少认证程序以及其他拓展程序），程序所需密码文件passwd
auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid3/passwd
# children 设置后台启动几个认证程序进程
auth_param basic children 20
# realm 设置认证时返回头里夹带的信息“wlecome to using my proxy”
auth_param basic realm Squid proxy-caching web server
# credentialsttl 设置认证失效时间，过期后需重新认证
auth_param basic credentialsttl 2 hours

# maxconn, 设置一个ip的最大并发连接数
# 注意这个如果用户的连接是经过代理（很多环境下会存在透明代理），这个计数统计的是直连squid的ip。就是说如果你用家中两台电脑连接了squid，
# 对于squid而言你们的ip其实是一样的。因为你家（小区）的局域网出口都是一个ip。
acl aclname maxconn 100
# client_ip_max_connections，定义同一ip，在同一时间内所允许的最大连接数（感觉跟acl maxcoon有点类似）
client_ip_max_connections 200

# authenticate_ttl，定义用户登录信息在“login cache”中的存活时间，（跟authenticate_ip_ttl有啥区别=。=#）
authenticate_ttl 20 hour


# 设置内存缓存大小（在内存中的cache，不是硬盘cache）
# PS：squid进程占用的内存大小除了与cache_mem有关，还有cache_dir的目录大小有关
cache_mem 256 MB

# 添加名为AuthUsers访问列表，表示通过认证的用户
acl AuthUsers proxy_auth REQUIRED
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
# 允许AuthUsers的代理请求
http_access allow AuthUsers

coredump_dir /var/spool/squid3
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern (Release|Packages(.gz)*)$      0       20%     2880
refresh_pattern .		0	20%	4320
#设置指定的时间内squid尚未从被请求的服务器读入任何数据squid将终止该客户请求
request_timeout 5 minutes

#设置squid等待连接完成的超时时间
connect_timeout 120 seconds

#设置squid将花多长时间等待客户发出HTTP请求
request_timeout 10 seconds

client_idle_pconn_timeout 20 minutes
client_lifetime 1 day
#管理联系信息
cache_mgr nut403@163.com

#配置为高匿名代理
# 关闭via
via	off
# 设置不修改http_forwarded_for
forwarded_for	transparent

request_header_access Via deny all
request_header_access X-Forwarded-For deny all
request_header_access From deny all